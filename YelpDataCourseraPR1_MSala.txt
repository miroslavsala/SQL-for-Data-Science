Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000 
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000 
vii. hours table = 10000 
viii. photo table = 10000 
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562 
iii. Category = 2643 
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000 
viii. Tip = 537 (count by user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780 

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
			SELECT 										--I performed this code for each column in the "user" table
			  sum(										--sums up all 1 that were returned by CASE statement inside the sum
				case 									--case statement returns 1 for any record that is null in the column compliment_writer
				when compliment_writer is null then 1
				else 0
				end
			  )
  
			FROM user
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
		select
			  bus.city
			  ,count(rev.id)
		from business bus
		LEFT JOIN review rev ON bus.id = rev.business_id 
		group by 1
		order by 2 desc
	
	
	Copy and Paste the Result Below:
		+-----------------+---------------+
		| city            | count(rev.id) |
		+-----------------+---------------+
		| Las Vegas       |           193 |
		| Phoenix         |            65 |
		| Toronto         |            51 |
		| Scottsdale      |            37 |
		| Henderson       |            30 |
		| Tempe           |            28 |
		| Pittsburgh      |            23 |
		| Chandler        |            22 |
		| Charlotte       |            21 |
		| Montréal        |            18 |
		| Madison         |            16 |
		| Gilbert         |            13 |
		| Mesa            |            13 |
		| Cleveland       |            12 |
		| North Las Vegas |             6 |
		| Edinburgh       |             5 |
		| Glendale        |             5 |
		| Lakewood        |             5 |
		| Cave Creek      |             4 |
		| Champaign       |             4 |
		| Markham         |             4 |
		| North York      |             4 |
		| Mississauga     |             3 |
		| Surprise        |             3 |
		| Avondale        |             2 |

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
		select
		  --bus.city
		  rev.stars
		  ,count(rev.id)
		from review rev
		left join business bus on rev.business_id = bus.id
		where
		  bus.city like ('Avon')
		group by 1



Copy and Paste the Resulting Table Below (2 columns – star rating and count):

		+-------+---------------+
		| stars | count(rev.id) |
		+-------+---------------+
		+-------+---------------+
		(Zero rows)


ii. Beachwood
		

SQL code used to arrive at answer:
		select
		  --bus.city
		  rev.stars
		  ,count(rev.id)
		from review rev
		left join business bus on rev.business_id = bus.id
		where
		  bus.city like ('Beachwood')
		group by 1
		

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
		+-------+---------------+
		| stars | count(rev.id) |
		+-------+---------------+
		|     3 |             1 |
		+-------+---------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		select
		  name
		  ,review_count
		from user
		order by 2 desc
		limit 3
		
	Copy and Paste the Result Below:
		+-----------+--------------+
		| name      | review_count |
		+-----------+--------------+
		| Gerald    |         2000 |
		| Sara      |         1629 |
		| Yuri      |         1339 |
		+-----------+--------------+

8. Does posing more reviews correlate with more fans?

	Posing of more reviews doesn't correlate with having more fans.

	Please explain your findings and interpretation of the results:

		select
		  name
		  ,review_count
		  ,fans
		from user
		order by 2 desc
	
	
		From the table below we see users ordered by number of reviews descending. And we see number of fans in the third column for each user. As visible, although number of reviews descents, the number of fans is  'jumpy' - not very correlated with review_count. Calculating correlation coefficient for the first 25 users shows correlation coefficient at 0.293, hence weak positive correlation.
		
		+-----------+--------------+------+
		| name      | review_count | fans |
		+-----------+--------------+------+
		| Gerald    |         2000 |  253 |
		| Sara      |         1629 |   50 |
		| Yuri      |         1339 |   76 |
		| .Hon      |         1246 |  101 |
		| William   |         1215 |  126 |
		| Harald    |         1153 |  311 |
		| eric      |         1116 |   16 |
		| Roanna    |         1039 |  104 |
		| Mimi      |          968 |  497 |
		| Christine |          930 |  173 |
		| Ed        |          904 |   38 |
		| Nicole    |          864 |   43 |
		| Fran      |          862 |  124 |
		| Mark      |          861 |  115 |
		| Christina |          842 |   85 |
		| Dominic   |          836 |   37 |
		| Lissa     |          834 |  120 |
		| Lisa      |          813 |  159 |
		| Alison    |          775 |   61 |
		| Sui       |          754 |   78 |
		| Tim       |          702 |   35 |
		| L         |          696 |   10 |
		| Angela    |          694 |  101 |
		| Crissy    |          676 |   25 |
		| Lyn       |          675 |   45 |
		+-----------+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
		There are more love statements than hate statements.
		
	
	SQL code used to arrive at answer:
		select
		  sum(									--summing the case statement will give a number. If the number is positive, there are more 'love'- than 'hate'-containing reviews. Since case statement stops processing when a condition is met, I started with identifying 'hate' statements. Since the number is still positive, there are clearly more 'love' reviews than 'hate' reviews.
			case								--this case statement assigns 1 to review that contains word 'love', -1 if it has word 'hate' and 0 otherwise
			when text like ('%hate%') then -1
			when text like ('%love%') then 1
			else 0 end  
		  ) as 'LoveORHate'
		from review
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		select
		  name
		  ,fans
		from user
		order by 2 desc
		limit 10
	
	Copy and Paste the Result Below:
		+-----------+------+
		| name      | fans |
		+-----------+------+
		| Amy       |  503 |
		| Mimi      |  497 |
		| Harald    |  311 |
		| Gerald    |  253 |
		| Christine |  173 |
		| Lisa      |  159 |
		| Cat       |  133 |
		| William   |  126 |
		| Fran      |  124 |
		| Lissa     |  120 |
		+-----------+------+
	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
		select
			  name
			  ,fans
			  ,useful
			  ,funny
			from user
			order by 2 desc
			limit 10
	
	Copy and Paste the Result Below:
	
		+-----------+------+--------+--------+
		| name      | fans | useful |  funny |
		+-----------+------+--------+--------+
		| Amy       |  503 |   3226 |   2554 |
		| Mimi      |  497 |    257 |    138 |
		| Harald    |  311 | 122921 | 122419 |
		| Gerald    |  253 |  17524 |   2324 |
		| Christine |  173 |   4834 |   6646 |
		| Lisa      |  159 |     48 |     13 |
		| Cat       |  133 |   1062 |    672 |
		| William   |  126 |   9363 |   9361 |
		| Fran      |  124 |   9851 |   7606 |
		| Lissa     |  120 |    455 |    150 |
		+-----------+------+--------+--------+
	
	
	Please explain your findings and interpretation of the results:
		When looking at the top 10 users with highest number of fans, all of the top 10 users are also listed as useful and funny (with having useful and funny >=1) -> strong relationship.
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

Result:
		+-------+--------------------------------+----------------------+--------------+
		| stars | name                           | hours                | review_count |
		+-------+--------------------------------+----------------------+--------------+
		|   2.5 | Walgreens                      | Monday|8:00-22:00    |            6 |
		|   2.5 | Walgreens                      | Tuesday|8:00-22:00   |            6 |
		|   2.5 | Walgreens                      | Friday|8:00-22:00    |            6 |
		|   2.5 | Walgreens                      | Wednesday|8:00-22:00 |            6 |
		|   2.5 | Walgreens                      | Thursday|8:00-22:00  |            6 |
		|   2.5 | Walgreens                      | Sunday|8:00-22:00    |            6 |
		|   2.5 | Walgreens                      | Saturday|8:00-22:00  |            6 |
		|   4.5 | Red Rock Canyon Visitor Center | Monday|8:00-16:30    |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Tuesday|8:00-16:30   |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Friday|8:00-16:30    |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Wednesday|8:00-16:30 |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Thursday|8:00-16:30  |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Sunday|8:00-16:30    |           32 |
		|   4.5 | Red Rock Canyon Visitor Center | Saturday|8:00-16:30  |           32 |
		+-------+--------------------------------+----------------------+--------------+
	
i. Do the two groups you chose to analyze have a different distribution of hours?
		Yes they do. Although both segments are open on Saturdays, the segment with the lower rating has longer operating hours in each day. 

ii. Do the two groups you chose to analyze have a different number of reviews?
         Yes, they do. The segment with lower rating has smaller number of reviews.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
		No beause location of both groups (the city) is the same. Perhaps I could analyze average star ratings by post code and see if some areas in the city correlates with higher or lower average rating. Since I have 2 businesses in the sample, that analysis seems obsolete - the sample is too small to make generalized conclusions about postal codes areas.

SQL code used for analysis:
		select
		  bus.stars
		  ,name
		  ,hours
		  ,review_count
		from business bus
		left join hours hrs on hrs.business_id = bus.id
		left join category cat on cat.business_id = bus.id
		where
		  bus.city in ("Las Vegas")
		  AND cat.category in ("Shopping")
		  AND ((stars between 2.01 and 2.99) OR (stars between 4.01 and 4.99)) --I included business between 2 nad 3 and 4 and 5 in mathematical sense not inclusive of border values
		  
		--group by 1
		order by 1,2 desc
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         The open businesses have on average more check-ins. It is 1.65 for open businesses vs 1.25 for closed ones.
         
ii. Difference 2:
         The open businesses have on average more reviews. It is 23 for open businesses vs 31 for closed ones.
         
         
SQL code used for analysis:
		select
		  bus.is_open
		  ,avg(bus.review_count)
		  ,avg(ch."count") --check-in count
		from business bus
		left join checkin ch on ch.business_id = bus.id
		group by 1
	
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
		 - do places that have more photos have also more stars (is there positive correlation between number of stars and number of photos)? Or is there a sweet spot of number of photos (i.e. perhaps both too low and too high number of photos is bad and we should be recommending some optimal number of photos for each place)? 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
         - I will need to connect photos table with the business table with inner join. Inner join prevents from having businesses with no pictures                  
                  
iii. Output of your finished dataset:

		 - There is strong positive correlation between number of pictures and average rating. Ideally, I'd like to expand the data set or increase number of cases in category ">=4" to confirm this finding.
        
		+---------+--------------------+---------------+
		| nr_pics | count(business_id) |    avg(stars) |
		+---------+--------------------+---------------+
		|       1 |                320 |         3.575 |
		|       2 |                 60 |          3.75 |
		|       3 |                 30 |          3.75 |
		|     >=4 |                 15 | 4.16666666667 |
		+---------+--------------------+---------------+
         
iv. Provide the SQL code you used to create your final dataset:
		

		
		select
		  nr_pics														-- These are categories that I am analyzing, hence I group data by these categories
		  ,count(business_id) 											-- I am counting number of cases in each category to get sense of representativeness of each category. Ideally I'd like to have sizes of categories similar and big enough for better representativeness
		  ,avg(stars)
		from(
				
				select                                             		-- This is intermediate step for my analysis. I prepare myself relevant data that I will be further analysing - counting and averaging.
						business_id
						,bus.stars
						,case 
							when count(ph.id) between 1 and 3 then count(ph.id) 
						 else ">=4" end as nr_pics                      -- as there is a fat tail of outliers with >= 4 photos, I group them all to 1 category ">=4" to get category that is easier to analyze and is more representative as it contains more businesses  
				from photo ph
				inner join business bus on bus.id = ph.business_id 		-- I am using inner join as there are many pictures that don't match to any business in the business table (result of having only a sample of Yelp database)
				group by 1,2
			)
		group by 1
